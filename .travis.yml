language: cpp
sudo: true
branches:
  only: travis
git:
  depth: false

matrix:
  include:
    - os: osx
      compiler: clang++
      env: MXE_BUILD=false

    - os: osx
      compiler: mingw-w64-g++
      env: MXE_BUILD=true

    - os: linux
      compiler: clang++
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: ppa:keithw/glfw3
          packages:
            - doxygen
            - libstdc++-5-dev
            - premake4
            - libfreetype6-dev
            - libglfw3-dev
            - libglew-dev
            - libpng-dev
            - zlib1g-dev
            - libdevil-dev


before_install:
  - export VERSION=$(git describe --always --tags --abbrev=0)
  #Setup Git Deploy Key
  - openssl aes-256-cbc -K $encrypted_d204c11e5c97_key -iv $encrypted_d204c11e5c97_iv -in id_rsa_nymph_game_engine_build.enc -out id_rsa_nymph_game_engine_build -d
  - chmod 600 id_rsa_nymph_game_engine_build
  - eval `ssh-agent -s`
  - ssh-add id_rsa_nymph_game_engine_build
  #Setup Git User
  - git config user.name "NymphBuildBot"
  - git config user.email "adaleigh.martin@gmail.com"
  - echo "Building Version $VERSION"
  - echo "Build Number $TRAVIS_BUILD_NUMBER"

install:
  #Install Libraries
  - if [ $TRAVIS_OS_NAME = linux ]; then sh install_scripts/linux_install; fi
  - if [[ ($TRAVIS_OS_NAME = osx) && ($MXE_BUILD = true) ]]; then sh install_scripts/win_install; fi
  - if [[ ($TRAVIS_OS_NAME = osx) && ($MXE_BUILD = false) ]]; then sh install_scripts/osx_install; fi

script:
  #Build
  - nymph-generate
  - premake4 gmake
  - cd ./build
  - if [ $TRAVIS_OS_NAME = linux ]; then make config=linuxdebug; fi
  - if [[ ($TRAVIS_OS_NAME = osx) && ($MXE_BUILD = true) ]]; then make config=windowsdebug; fi
  - if [[ ($TRAVIS_OS_NAME = osx) && ($MXE_BUILD = false) ]]; then make config=macdebug; fi
  - cd ..

after_success:
  #Package Build Artifacts
  - if [ $TRAVIS_OS_NAME = linux ]; then install_scripts/linux_package; fi
  - if [[ ($TRAVIS_OS_NAME = osx) && ($MXE_BUILD = true) ]]; then install_scripts/win_package; fi
  - if [[ ($TRAVIS_OS_NAME = osx) && ($MXE_BUILD = false) ]]; then install_scripts/osx_package; fi

  #Generate Docs, only need to do for one OS
  - if [ $TRAVIS_OS_NAME = linux ]; then doxygen doxyfile; fi
  #Push off newly generated documentation, only need to do for one OS
  - if [ $TRAVIS_OS_NAME = linux ]; then git clone $DOCS_REPO; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then cd $DOCS_REPO_NAME && rm -rf *; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then mv ../docs/* .; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then git add *; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then git commit -m "Documentation update for version $VERSION, build $TRAVIS_BUILD_NUMBER."; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then git push origin master; fi
